{"openapi": "3.1.0", "info": {"title": "Polman API", "version": "0.1.0"}, "servers": [{"url": "http://localhost:8000/polman", "description": "Local Development"}, {"url": "http://10.160.3.20:30700/polman", "description": "ICOS Staging Testbed"}], "paths": {"/registry/api/v1/policies/{pid}": {"get": {"tags": ["policies"], "summary": "Get Policy", "operationId": "get_policy_registry_api_v1_policies__pid__get", "parameters": [{"name": "pid", "in": "path", "required": true, "schema": {"type": "string", "title": "Pid"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PolicyRead"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["policies"], "summary": "Delete Policy", "operationId": "delete_policy_registry_api_v1_policies__pid__delete", "parameters": [{"name": "pid", "in": "path", "required": true, "schema": {"type": "string", "title": "Pid"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "responses": {"204": {"description": "Successful Response"}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/policies/{pid}/activate": {"post": {"tags": ["policies"], "summary": "Activate a Policy", "operationId": "activate_policy_registry_api_v1_policies__pid__activate_post", "parameters": [{"name": "pid", "in": "path", "required": true, "schema": {"type": "string", "title": "Pid"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "responses": {"204": {"description": "Successful Response"}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/policies/{pid}/deactivate": {"post": {"tags": ["policies"], "summary": "Deactivate a Policy", "operationId": "deactivate_policy_registry_api_v1_policies__pid__deactivate_post", "parameters": [{"name": "pid", "in": "path", "required": true, "schema": {"type": "string", "title": "Pid"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "responses": {"204": {"description": "Successful Response"}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/policies/": {"get": {"tags": ["policies"], "summary": "List Policies", "operationId": "list_policies_registry_api_v1_policies__get", "parameters": [{"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/PolicyRead"}, "title": "Response List Policies Registry Api V1 Policies  Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["policies"], "summary": "Create Policy", "operationId": "create_policy_registry_api_v1_policies__post", "parameters": [{"name": "do_not_activate", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Do Not Activate"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PolicyCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PolicyRead"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/policies/{pid}/variables/": {"get": {"tags": ["policies"], "summary": "List policy variables", "description": "Returns all variables currently set for the given policy.", "operationId": "get_policy_variables_registry_api_v1_policies__pid__variables__get", "parameters": [{"name": "pid", "in": "path", "required": true, "schema": {"type": "string", "title": "Pid"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "additionalProperties": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}]}, "title": "Response Get Policy Variables Registry Api V1 Policies  Pid  Variables  Get"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/policies/{pid}/variables/{name}/{value}": {"post": {"tags": ["policies"], "summary": "Set a variable", "description": "Sets a policy variable. The variable name and values are both taken from the \nrequest's path.\n\nA conversion of {value} to `int` and to `float` are attempt. If they fail,\nvalues will be considered of type `str`.\n\nThis operation also re-render the policy and might activate/deactivate it.\n\nThe steps performed during this operation are:\n1. Deactivate the policy if it is active\n2. Set the variable\n3. Re-render the policy\n4. Activate the policy if it was active", "operationId": "set_policy_variables_registry_api_v1_policies__pid__variables__name___value__post", "parameters": [{"name": "pid", "in": "path", "required": true, "schema": {"type": "string", "title": "Pid"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string", "title": "Name"}}, {"name": "value", "in": "path", "required": true, "schema": {"type": "string", "title": "Value"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "responses": {"204": {"description": "Successful Response"}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/policies/{pid}/variables/{name}": {"delete": {"tags": ["policies"], "summary": "Delete a policy variable", "description": "Deletes a variable.\n\nIf the variable does not exists, returns `404`\nIf the variable is necessary for the policy rendering, returns `406`.\n\nIn case of exception, the policy is not modified.", "operationId": "unset_policy_variables_registry_api_v1_policies__pid__variables__name__delete", "parameters": [{"name": "pid", "in": "path", "required": true, "schema": {"type": "string", "title": "Pid"}}, {"name": "name", "in": "path", "required": true, "schema": {"type": "string", "title": "Name"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "responses": {"204": {"description": "Successful Response"}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/icos/app": {"post": {"tags": ["icos"], "summary": "Notify events for ICOS Apps", "description": "Notify lifecycle events of ICOS Applications. This allows Polman to react to \nthe events by configuring the policies accordingly. Currently, the following \nevents are supported: **created**, **started**, **stopped**, **deleted**.\n\nThe payload should be a json file with these mandatory fields:\n\n```\n{\n  \"app_instance\":   <id-of-the-application>\n  \"event\":          created|started|stopped|deleted\n  \"service\":        <service-that-is-making-the-notification>\n}\n```\n\nFor the **created** event only, the following additional fields are considered:\n\n```\n{\n  ...\n  \"app_descriptor\": <app-descriptor-as-yaml-string>\n  \"callback\": {\n      \"type\": \"icos-service\"\n      \"uri\": <path-that-polman-will-call-when-policies-are-violated>,\n      \"http_method\": GET|POST|PUT|DELETE,\n      \"include_access_token\": true|false,\n      \"extra_params\": {\n          \"customParam\": \"test-1\"\n      }\n  }\n  ...\n]\n```\nFor further examples, see below.", "operationId": "icos_app_update_registry_api_v1_icos_app_post", "parameters": [{"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/ICOSAppCreatedEvent"}, {"$ref": "#/components/schemas/ICOSAppStartedEvent"}, {"$ref": "#/components/schemas/ICOSAppStoppedEvent"}, {"$ref": "#/components/schemas/ICOSAppDeletedEvent"}], "title": "Req"}, "examples": {"created": {"value": {"app_instance": "demo-app-999", "event": "created", "service": "job-manager", "app_descriptor": "name: mjpeg-ffmpeg-app\ndescription: \"the description\"\ncomponents:\n- name: ffmpeg\n  type: manifest\n  manifests:\n  - name: ffmpeg-pod\n- name: mjpeg\n  type: manifest\n  manifests:\n  - name: mjpeg-service\n  - name: mjpeg-pod\npolicies:\n- component: \"*\"\n  fromTemplate: app-host-cpu-usage\n  remediation: migrate\n  variables:\n    maxCpu: 0.8\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: ffmpeg-pod\n  namespace: demo\nspec:\n  containers:\n  - name: ffmpeg-container\n    image: santojim/ffmpeg:arm64\n    command:\n    - \"ffmpeg\"\n    args:\n    - \"-i\"\n    - \"http://10.150.0.133:30674/mjpeg\"\n    - \"-fs\"\n    - \"100M\"\n    - \"-c:v\"\n    - \"copy\"\n    - \"video.mp4\"\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mjpeg-pod\n  namespace: demo\n  labels:\n    app.kubernetes.io/name: mjpeg\nspec:\n  containers:\n  - name: kceu\n    image: santojim/camera_to_ip:arm64\n    command:\n    - /cam2ip\n    args:\n    - --bind-addr=:8080\n    ports:\n    - containerPort: 8080\n      name: http\n    resources:\n      limits:\n        squat.ai/video: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mjpeg-service\n  namespace: demo\nspec:\n  selector:\n    app.kubernetes.io/name: mjpeg\n  ports:\n  - protocol: TCP\n    port: 8080\n    targetPort: 8080\n    nodePort: 30674\n  type: NodePort\n\n", "callback": {"uri": "/jobmanager/policies/incompliance/create", "http_method": "POST", "extra_params": {"customParam": "test-1"}}}}, "started": {"value": {"app_instance": "demo-app-999", "event": "started", "service": "job-manager"}}, "stopped": {"value": {"app_instance": "demo-app-999", "event": "stopped", "service": "job-manager"}}, "deleted": {"value": {"app_instance": "demo-app-999", "event": "deleted", "service": "job-manager"}}}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/PolicyRead"}, "title": "Response Icos App Update Registry Api V1 Icos App Post"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/icos/": {"post": {"tags": ["icos"], "summary": "Create policies for an ICOS App", "operationId": "icos_process_app_descriptor_registry_api_v1_icos__post", "deprecated": true, "parameters": [{"name": "do_not_activate", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Do Not Activate"}}, {"name": "authorization", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Authorization"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ICOSAppDeployedRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/PolicyRead"}, "title": "Response Icos Process App Descriptor Registry Api V1 Icos  Post"}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/registry/api/v1/stats/": {"get": {"tags": ["stats"], "summary": "Stats on the policies currently managed by Polman Registry", "description": "Returns the number of policies managed by the Polman Registry grouped by\ntheir status.\n\nThis is a public endpoint: no authentication and authorization are required.", "operationId": "get_stats_registry_api_v1_stats__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PolicyStatsResponseModel"}}}}, "404": {"description": "Not found"}}}}, "/watcher/api/v1/webhooks/alertmanager": {"post": {"tags": ["webhooks"], "summary": "Alertmanager Webhook", "operationId": "alertmanager_webhook_watcher_api_v1_webhooks_alertmanager_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AlertmanagerWebhook"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/status/": {"get": {"tags": ["debug"], "summary": "Read Item", "description": "A simple HTTP interface with the status of the policies", "operationId": "read_item_status__get", "responses": {"200": {"description": "Successful Response", "content": {"text/html": {"schema": {"type": "string"}}}}, "404": {"description": "Not found"}}}}}, "components": {"schemas": {"AlertmanagerAlert": {"properties": {"status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "labels": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Labels"}, "annotations": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Annotations"}, "startsAt": {"type": "string", "format": "date-time", "title": "Startsat"}, "endsAt": {"type": "string", "format": "date-time", "title": "Endsat"}, "generatorURL": {"type": "string", "title": "Generatorurl"}, "fingerprint": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Fingerprint"}}, "type": "object", "required": ["labels", "annotations", "startsAt", "endsAt", "generatorURL"], "title": "AlertmanagerAlert"}, "AlertmanagerWebhook": {"properties": {"version": {"type": "string", "title": "Version"}, "groupKey": {"type": "string", "title": "Groupkey"}, "truncatedAlerts": {"type": "integer", "title": "Truncatedalerts"}, "status": {"type": "string", "title": "Status"}, "receiver": {"type": "string", "title": "Receiver"}, "groupLabels": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Grouplabels"}, "commonLabels": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Commonlabels"}, "commonAnnotations": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Commonannotations"}, "externalURL": {"type": "string", "title": "Externalurl"}, "alerts": {"items": {"$ref": "#/components/schemas/AlertmanagerAlert"}, "type": "array", "title": "Alerts"}}, "type": "object", "required": ["version", "groupKey", "truncatedAlerts", "status", "receiver", "groupLabels", "commonLabels", "commonAnnotations", "externalURL", "alerts"], "title": "AlertmanagerWebhook"}, "HTTPMethod": {"type": "string", "enum": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"], "title": "HTTPMethod", "description": "HTTP methods and descriptions\n\nMethods from the following RFCs are all observed:\n\n    * RFC 7231: Hypertext Transfer Protocol (HTTP/1.1), obsoletes 2616\n    * RFC 5789: PATCH Method for HTTP"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ICOSAppCreatedEvent": {"properties": {"app_instance": {"type": "string", "title": "App Instance"}, "app_descriptor": {"anyOf": [{"$ref": "#/components/schemas/ICOSAppDescriptor"}, {"type": "null"}]}, "callback": {"anyOf": [{"$ref": "#/components/schemas/PolicyActionICOSService"}, {"type": "null"}]}, "service": {"type": "string", "title": "Service"}, "event": {"const": "created", "title": "Event", "default": "created"}}, "type": "object", "required": ["app_instance", "service"], "title": "ICOSAppCreatedEvent"}, "ICOSAppDeletedEvent": {"properties": {"app_instance": {"type": "string", "title": "App Instance"}, "app_descriptor": {"anyOf": [{"$ref": "#/components/schemas/ICOSAppDescriptor"}, {"type": "null"}]}, "callback": {"anyOf": [{"$ref": "#/components/schemas/PolicyActionICOSService"}, {"type": "null"}]}, "service": {"type": "string", "title": "Service"}, "event": {"const": "deleted", "title": "Event", "default": "deleted"}}, "type": "object", "required": ["app_instance", "service"], "title": "ICOSAppDeletedEvent"}, "ICOSAppDeployedRequest": {"properties": {"app_descriptor": {"$ref": "#/components/schemas/ICOSAppDescriptor"}, "app_instance": {"type": "string", "title": "App Instance"}, "common_action": {"$ref": "#/components/schemas/PolicyActionICOSService"}, "service": {"type": "string", "title": "Service"}}, "type": "object", "required": ["app_descriptor", "app_instance", "common_action", "service"], "title": "ICOSAppDeployedRequest"}, "ICOSAppDescriptor": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"type": "string", "title": "Description"}, "components": {"items": {"$ref": "#/components/schemas/ICOSAppDescriptorComponent"}, "type": "array", "title": "Components", "default": []}, "policies": {"items": {"anyOf": [{"$ref": "#/components/schemas/ICOSSecurityPolicyShort"}, {"$ref": "#/components/schemas/ICOSSecurityPolicy"}, {"$ref": "#/components/schemas/ICOSPolmanTemplatePolicy"}, {"$ref": "#/components/schemas/ICOSPolmanSpecPolicy"}, {"$ref": "#/components/schemas/NoPolmanPolicy"}]}, "type": "array", "title": "Policies", "default": []}}, "type": "object", "required": ["name", "description"], "title": "ICOSAppDescriptor"}, "ICOSAppDescriptorComponent": {"properties": {"name": {"type": "string", "title": "Name"}, "type": {"type": "string", "title": "Type"}, "policies": {"anyOf": [{"items": {"anyOf": [{"$ref": "#/components/schemas/ICOSSecurityPolicyShort"}, {"$ref": "#/components/schemas/ICOSSecurityPolicy"}, {"$ref": "#/components/schemas/ICOSPolmanTemplatePolicy"}, {"$ref": "#/components/schemas/ICOSPolmanSpecPolicy"}, {"$ref": "#/components/schemas/NoPolmanPolicy"}]}, "type": "array"}, {"type": "null"}], "title": "Policies", "default": []}}, "type": "object", "required": ["name", "type"], "title": "ICOSAppDescriptorComponent"}, "ICOSAppStartedEvent": {"properties": {"app_instance": {"type": "string", "title": "App Instance"}, "app_descriptor": {"anyOf": [{"$ref": "#/components/schemas/ICOSAppDescriptor"}, {"type": "null"}]}, "callback": {"anyOf": [{"$ref": "#/components/schemas/PolicyActionICOSService"}, {"type": "null"}]}, "service": {"type": "string", "title": "Service"}, "event": {"const": "started", "title": "Event", "default": "started"}}, "type": "object", "required": ["app_instance", "service"], "title": "ICOSAppStartedEvent"}, "ICOSAppStoppedEvent": {"properties": {"app_instance": {"type": "string", "title": "App Instance"}, "app_descriptor": {"anyOf": [{"$ref": "#/components/schemas/ICOSAppDescriptor"}, {"type": "null"}]}, "callback": {"anyOf": [{"$ref": "#/components/schemas/PolicyActionICOSService"}, {"type": "null"}]}, "service": {"type": "string", "title": "Service"}, "event": {"const": "stopped", "title": "Event", "default": "stopped"}}, "type": "object", "required": ["app_instance", "service"], "title": "ICOSAppStoppedEvent"}, "ICOSPolmanSpecPolicy": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "apply-to": {"items": {"type": "string"}, "type": "array", "title": "Apply-To", "default": []}, "remediation": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Remediation", "default": "none"}, "variables": {"type": "object", "title": "Variables", "default": {}}, "properties": {"allOf": [{"$ref": "#/components/schemas/PolicyProperties"}], "default": {}}, "type": {"const": "custom", "title": "Type", "default": "custom"}, "spec": {"anyOf": [{"$ref": "#/components/schemas/PolicySpecTemplate"}, {"$ref": "#/components/schemas/PolicySpecTelemetry"}, {"$ref": "#/components/schemas/PolicySpecConstraints"}], "title": "Spec"}}, "type": "object", "required": ["spec"], "title": "ICOSPolmanSpecPolicy"}, "ICOSPolmanTemplatePolicy": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "apply-to": {"items": {"type": "string"}, "type": "array", "title": "Apply-To", "default": []}, "remediation": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Remediation", "default": "none"}, "variables": {"type": "object", "title": "Variables", "default": {}}, "properties": {"allOf": [{"$ref": "#/components/schemas/PolicyProperties"}], "default": {}}, "type": {"const": "custom", "title": "Type", "default": "custom"}, "fromTemplate": {"type": "string", "title": "Fromtemplate"}}, "type": "object", "required": ["fromTemplate"], "title": "ICOSPolmanTemplatePolicy"}, "ICOSSecurityPolicy": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "apply-to": {"items": {"type": "string"}, "type": "array", "title": "Apply-To", "default": []}, "remediation": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Remediation", "default": "none"}, "variables": {"type": "object", "title": "Variables", "default": {}}, "properties": {"allOf": [{"$ref": "#/components/schemas/PolicyProperties"}], "default": {}}, "type": {"const": "security", "title": "Type", "default": "security"}, "threshold": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Threshold"}, "level": {"anyOf": [{"type": "string", "enum": ["low", "medium", "high"]}, {"type": "null"}], "title": "Level"}}, "type": "object", "title": "ICOSSecurityPolicy"}, "ICOSSecurityPolicyShort": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "apply-to": {"items": {"type": "string"}, "type": "array", "title": "Apply-To", "default": []}, "remediation": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Remediation", "default": "none"}, "variables": {"type": "object", "title": "Variables", "default": {}}, "properties": {"allOf": [{"$ref": "#/components/schemas/PolicyProperties"}], "default": {}}, "security": {"type": "string", "title": "Security"}}, "type": "object", "required": ["security"], "title": "ICOSSecurityPolicyShort"}, "NoPolmanPolicy": {"properties": {"type": {"type": "string", "title": "Type"}}, "type": "object", "required": ["type"], "title": "NoPolmanPolicy"}, "PolicyActionICOSService": {"properties": {"type": {"const": "icos-service", "title": "Type", "default": "icos-service"}, "uri": {"type": "string", "title": "Uri"}, "http_method": {"$ref": "#/components/schemas/HTTPMethod"}, "extra_params": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Extra Params", "default": {}}, "include_access_token": {"type": "boolean", "title": "Include Access Token", "default": false}}, "type": "object", "required": ["uri", "http_method"], "title": "PolicyActionICOSService"}, "PolicyActionWebhook": {"properties": {"type": {"const": "webhook", "title": "Type", "default": "webhook"}, "url": {"type": "string", "title": "Url"}, "httpMethod": {"$ref": "#/components/schemas/HTTPMethod"}, "extraParams": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Extraparams", "default": {}}, "includeAccessToken": {"type": "boolean", "title": "Includeaccesstoken", "default": false}}, "type": "object", "required": ["url", "httpMethod"], "title": "PolicyActionWebhook"}, "PolicyCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "subject": {"anyOf": [{"$ref": "#/components/schemas/PolicySubjectApplication"}, {"$ref": "#/components/schemas/PolicySubjectHost"}, {"$ref": "#/components/schemas/PolicySubjectCustom"}], "title": "Subject"}, "spec": {"anyOf": [{"$ref": "#/components/schemas/PolicySpecTemplate"}, {"$ref": "#/components/schemas/PolicySpecTelemetry"}, {"$ref": "#/components/schemas/PolicySpecConstraints"}], "title": "Spec"}, "action": {"$ref": "#/components/schemas/PolicyActionWebhook"}, "variables": {"additionalProperties": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}]}, "type": "object", "title": "Variables", "default": {}}, "properties": {"allOf": [{"$ref": "#/components/schemas/PolicyProperties"}], "default": {}}}, "type": "object", "required": ["name", "subject", "spec", "action"], "title": "PolicyCreate"}, "PolicyEvent": {"properties": {"type": {"$ref": "#/components/schemas/PolicyEventType"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp"}, "details": {"additionalProperties": {"anyOf": [{"type": "string"}, {"type": "integer"}, {"type": "number"}, {"additionalProperties": {"type": "string"}, "type": "object"}, {"type": "null"}]}, "type": "object", "title": "Details", "default": {}}}, "type": "object", "required": ["type", "timestamp"], "title": "PolicyEvent"}, "PolicyEventType": {"type": "string", "enum": ["activated", "deactivated", "violated", "resolved", "created", "deleted", "rendered", "renderedError", "variableSet"], "title": "PolicyEventType"}, "PolicyPhase": {"type": "string", "enum": ["enforced", "violated", "inactive", "unknown"], "title": "PolicyPhase"}, "PolicyProperties": {"properties": {"oneoff": {"type": "boolean", "title": "Oneoff"}, "interval": {"type": "string", "title": "Interval"}, "pendingInterval": {"type": "string", "title": "Pendinginterval"}}, "type": "object", "title": "PolicyProperties"}, "PolicyRead": {"properties": {"name": {"type": "string", "title": "Name"}, "subject": {"anyOf": [{"$ref": "#/components/schemas/PolicySubjectApplication"}, {"$ref": "#/components/schemas/PolicySubjectHost"}, {"$ref": "#/components/schemas/PolicySubjectCustom"}], "title": "Subject"}, "spec": {"anyOf": [{"$ref": "#/components/schemas/PolicySpecTemplate"}, {"$ref": "#/components/schemas/PolicySpecTelemetry"}, {"$ref": "#/components/schemas/PolicySpecConstraints"}], "title": "Spec"}, "action": {"$ref": "#/components/schemas/PolicyActionWebhook"}, "variables": {"additionalProperties": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "string"}]}, "type": "object", "title": "Variables", "default": {}}, "properties": {"allOf": [{"$ref": "#/components/schemas/PolicyProperties"}], "default": {}}, "id": {"type": "string", "title": "Id"}, "status": {"allOf": [{"$ref": "#/components/schemas/PolicyStatus"}], "default": {"measurementBackends": {}, "events": [], "phase": "unknown"}}}, "type": "object", "required": ["name", "subject", "spec", "action", "id"], "title": "PolicyRead"}, "PolicySpecConstraints": {"properties": {"description": {"type": "string", "title": "Description", "default": ""}, "type": {"const": "constraints", "title": "Type"}, "constraints": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Constraints"}}, "type": "object", "required": ["type", "constraints"], "title": "PolicySpecConstraints"}, "PolicySpecTelemetry": {"properties": {"description": {"type": "string", "title": "Description", "default": ""}, "type": {"const": "telemetryQuery", "title": "Type", "default": "telemetryQuery"}, "expr": {"type": "string", "title": "Expr"}, "violatedIf": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Violatedif"}, "thresholds": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "title": "Thresholds"}}, "type": "object", "required": ["expr"], "title": "PolicySpecTelemetry"}, "PolicySpecTemplate": {"properties": {"description": {"type": "string", "title": "Description", "default": ""}, "type": {"const": "template", "title": "Type", "default": "template"}, "templateName": {"type": "string", "title": "Templatename"}}, "type": "object", "required": ["templateName"], "title": "PolicySpecTemplate"}, "PolicyStatsResponseModel": {"properties": {"total": {"type": "integer", "title": "Total"}, "active": {"type": "integer", "title": "Active"}, "inactive": {"type": "integer", "title": "Inactive"}, "enforced": {"type": "integer", "title": "Enforced"}, "violated": {"type": "integer", "title": "Violated"}, "unknown": {"type": "integer", "title": "Unknown"}}, "type": "object", "required": ["total", "active", "inactive", "enforced", "violated", "unknown"], "title": "PolicyStatsResponseModel"}, "PolicyStatus": {"properties": {"renderedSpec": {"anyOf": [{"$ref": "#/components/schemas/PolicySpecTemplate"}, {"$ref": "#/components/schemas/PolicySpecTelemetry"}, {"$ref": "#/components/schemas/PolicySpecConstraints"}, {"type": "null"}], "title": "Renderedspec"}, "measurementBackends": {"additionalProperties": {"additionalProperties": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "object"}, "type": "object", "title": "Measurementbackends", "default": {}}, "events": {"items": {"$ref": "#/components/schemas/PolicyEvent"}, "type": "array", "title": "Events", "default": []}, "phase": {"allOf": [{"$ref": "#/components/schemas/PolicyPhase"}], "default": "unknown"}}, "type": "object", "title": "PolicyStatus"}, "PolicySubjectApplication": {"properties": {"type": {"const": "app", "title": "Type", "default": "app"}, "appName": {"type": "string", "title": "Appname"}, "appInstance": {"type": "string", "title": "Appinstance"}, "appComponent": {"type": "string", "title": "Appcomponent"}}, "type": "object", "required": ["appName", "appInstance", "appComponent"], "title": "PolicySubjectApplication"}, "PolicySubjectCustom": {"properties": {"type": {"const": "custom", "title": "Type", "default": "custom"}}, "additionalProperties": true, "type": "object", "title": "PolicySubjectCustom"}, "PolicySubjectHost": {"properties": {"type": {"const": "host", "title": "Type", "default": "host"}, "hostId": {"type": "string", "title": "Hostid"}, "agentId": {"type": "string", "title": "Agentid"}}, "type": "object", "required": ["hostId", "agentId"], "title": "PolicySubjectHost"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}